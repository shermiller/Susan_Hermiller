Script started on Sun 21 May 2017 12:59:04 AM CDT
math-compute-1:~ $ gap
    
            #########           ######         ###########           ###  
         #############          ######         ############         ####  
        ##############         ########        #############       #####  
       ###############         ########        #####   ######      #####  
      ######         #         #########       #####    #####     ######  
     ######                   ##########       #####    #####    #######  
     #####                    ##### ####       #####   ######   ########  
     ####                    #####  #####      #############   ###  ####  
     #####     #######       ####    ####      ###########    ####  ####  
     #####     #######      #####    #####     ######        ####   ####  
     #####     #######      #####    #####     #####         #############
      #####      #####     ################    #####         #############
      ######     #####     ################    #####         #############
      ################    ##################   #####                ####  
       ###############    #####        #####   #####                ####  
         #############    #####        #####   #####                ####  
          #########      #####          #####  #####                ####  
                                                                          
     Information at:  http://www.gap-system.org
     Try '?help' for help. See also  '?copyright' and  '?authors'
    
   Loading the library. Please be patient, this may take a while.
GAP4, Version: 4.4.12 of 17-Dec-2008, x86_64-unknown-linux-gnu-gcc
Components:  small 2.1, small2 2.0, small3 2.0, small4 1.0, small5 1.0, 
             small6 1.0, small7 1.0, small8 1.0, small9 1.0, small10 0.2, id2 3.0, 
             id3 2.1, id4 1.0, id5 1.0, id6 1.0, id9 1.0, id10 0.1, trans 1.0, 
             prim 2.1  loaded.
Packages:    AClib 1.1, Polycyclic 2.6, Alnuth 2.2.5, AutPGrp 1.3, CrystCat 1.1.3, 
             Cryst 4.1.6, CRISP 1.3.2, CTblLib 1.1.3, TomLib 1.1.4, FactInt 1.5.2, 
             GAPDoc 1.2, FGA 1.1.0.1, IRREDSOL 1.1.2, LAGUNA 3.5.0, Sophus 1.23, 
             Polenta 1.2.7, ResClasses 2.5.3  loaded.
gap> 
gap> LoadPackage("KBMAG");
--------------------------------------------------------------------------------
Loading  kbmag 1.5 (Knuth-Bendix on Monoids and Automatic Groups)
by Derek Holt (http://www.warwick.ac.uk/~mareg).
--------------------------------------------------------------------------------
true
gap> 
gap> F:=FreeGroup("a","b","c");
<free group on the generators [ a, b, c ]>
gap> a:=F.1; 
a
gap> b:=F.2;
b
gap> c:=F.3;
c
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^3,(a*c)^3,(b*c)^3];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1,_g2*_g1*_g2],
         [_g1*_g3*_g1,_g3*_g1*_g3],
         [_g2*_g3*_g2,_g3*_g2*_g3]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^2+x_1+1)/(x_1^2-2*x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^4,(a*c)^4,(b*c)^4];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2,_g2*_g1*_g2*_g1],
         [_g1*_g3*_g1*_g3,_g3*_g1*_g3*_g1],
         [_g2*_g3*_g2*_g3,_g3*_g2*_g3*_g2]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^4+2*x_1^3+2*x_1^2+2*x_1+1)/(x_1^4-x_1^3-x_1^2-x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^5,(a*c)^5,(b*c)^5];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1,_g2*_g1*_g2*_g1*_g2],
         [_g1*_g3*_g1*_g3*_g1,_g3*_g1*_g3*_g1*_g3],
         [_g2*_g3*_g2*_g3*_g2,_g3*_g2*_g3*_g2*_g3]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^4+x_1^3+x_1^2+x_1+1)/(x_1^4-2*x_1^3+x_1^2-2*x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^6,(a*c)^6,(b*c)^6];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1*_g2,_g2*_g1*_g2*_g1*_g2*_g1],
         [_g1*_g3*_g1*_g3*_g1*_g3,_g3*_g1*_g3*_g1*_g3*_g1],
         [_g2*_g3*_g2*_g3*_g2*_g3,_g3*_g2*_g3*_g2*_g3*_g2]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^6+2*x_1^5+2*x_1^4+2*x_1^3+2*x_1^2+2*x_1+1)/(x_1^6-x_1^5-x_1^4-x_1^3-x_1^2-x_\
1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^7,(a*c)^7,(b*c)^7];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1*_g2*_g1,_g2*_g1*_g2*_g1*_g2*_g1*_g2],
         [_g1*_g3*_g1*_g3*_g1*_g3*_g1,_g3*_g1*_g3*_g1*_g3*_g1*_g3],
         [_g2*_g3*_g2*_g3*_g2*_g3*_g2,_g3*_g2*_g3*_g2*_g3*_g2*_g3]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^6+x_1^5+x_1^4+x_1^3+x_1^2+x_1+1)/(x_1^6-2*x_1^5+x_1^4-2*x_1^3+x_1^2-2*x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^8,(a*c)^8,(b*c)^8];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2,
          _g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1],
         [_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3,
          _g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1],
         [_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3,
          _g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^8+2*x_1^7+2*x_1^6+2*x_1^5+2*x_1^4+2*x_1^3+2*x_1^2+2*x_1+1)/(x_1^8-x_1^7-x_1^\
6-x_1^5-x_1^4-x_1^3-x_1^2-x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^9,(a*c)^9,(b*c)^9];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1,
          _g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2],
         [_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1,
          _g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3],
         [_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2,
          _g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^8+x_1^7+x_1^6+x_1^5+x_1^4+x_1^3+x_1^2+x_1+1)/(x_1^8-2*x_1^7+x_1^6-2*x_1^5+x_\
1^4-2*x_1^3+x_1^2-2*x_1+1)
gap> 
gap> 
gap> G:=F/[a^2,b^2,c^2,(a*b)^10,(a*c)^10,(b*c)^10];
<fp group on the generators [ a, b, c ]>
gap> R:=KBMAGRewritingSystem(G);
rec(
           isRWS := true,
          silent := true,
  generatorOrder := [_g1,_g2,_g3],
        inverses := [_g1,_g2,_g3],
        ordering := "shortlex",
       equations := [
         [_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2,
          _g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1*_g2*_g1],
         [_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3,
          _g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1*_g3*_g1],
         [_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3,
          _g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2*_g3*_g2]
       ]
)

gap> AutomaticStructure(R);
true
gap> g:=GrowthFunction(R);
(x_1^10+2*x_1^9+2*x_1^8+2*x_1^7+2*x_1^6+2*x_1^5+2*x_1^4+2*x_1^3+2*x_1^2+2*x_1+1)/\
(x_1^10-x_1^9-x_1^8-x_1^7-x_1^6-x_1^5-x_1^4-x_1^3-x_1^2-x_1+1)
gap> 
gap> quit;
math-compute-1:~ $ exit
exit

Script done on Sun 21 May 2017 12:59:17 AM CDT
