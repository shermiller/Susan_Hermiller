Script started on Sat 20 May 2017 10:03:15 PM CDT
math-compute-1:~ $ gap


            #########           ######         ###########           ###  
         #############          ######         ############         ####  
        ##############         ########        #############       #####  
       ###############         ########        #####   ######      #####  
      ######         #         #########       #####    #####     ######  
     ######                   ##########       #####    #####    #######  
     #####                    ##### ####       #####   ######   ########  
     ####                    #####  #####      #############   ###  ####  
     #####     #######       ####    ####      ###########    ####  ####  
     #####     #######      #####    #####     ######        ####   ####  
     #####     #######      #####    #####     #####         #############
      #####      #####     ################    #####         #############
      ######     #####     ################    #####         #############
      ################    ##################   #####                ####  
       ###############    #####        #####   #####                ####  
         #############    #####        #####   #####                ####  
          #########      #####          #####  #####                ####  
                                                                          
     Information at:  http://www.gap-system.org
     Try '?help' for help. See also  '?copyright' and  '?authors'
    
   Loading the library. Please be patient, this may take a while.
GAP4, Version: 4.4.12 of 17-Dec-2008, x86_64-unknown-linux-gnu-gcc
Components:  small 2.1, small2 2.0, small3 2.0, small4 1.0, small5 1.0, 
             small6 1.0, small7 1.0, small8 1.0, small9 1.0, small10 0.2, id2 3.0, 
             id3 2.1, id4 1.0, id5 1.0, id6 1.0, id9 1.0, id10 0.1, trans 1.0, 
             prim 2.1  loaded.
Packages:    AClib 1.1, Polycyclic 2.6, Alnuth 2.2.5, AutPGrp 1.3, CrystCat 1.1.3, 
             Cryst 4.1.6, CRISP 1.3.2, CTblLib 1.1.3, TomLib 1.1.4, FactInt 1.5.2, 
             GAPDoc 1.2, FGA 1.1.0.1, IRREDSOL 1.1.2, LAGUNA 3.5.0, Sophus 1.23, 
             Polenta 1.2.7, ResClasses 2.5.3  loaded.
gap> 
gap> # Simplifying a presentation
gap> 
gap> F6 := FreeGroup( 6 );
<free group on the generators [ f1, f2, f3, f4, f5, f6 ]>
gap> G := F6 / [ F6.1^2, F6.2^2, F6.4*F6.6^-1, F6.5^2, F6.6^2,
> F6.1*F6.2^-1*F6.3, F6.1*F6.5*F6.3^-1, F6.2*F6.4^-1*F6.3,
> F6.3*F6.4*F6.5^-1, F6.1*F6.6*F6.3^-2, F6.3^4 ];
<fp group on the generators [ f1, f2, f3, f4, f5, f6 ]>
gap> H := SimplifiedFpGroup( G );
<fp group on the generators [ f1, f3 ]>
gap> RelatorsOfFpGroup( H );
[ f1^2, f1*f3^-1*f1*f3^-1, f3^4 ]
gap> 
gap> #-----------------------------------------------------------
gap> 
gap> # Finding the order of a finitely presented group,
gap> # checking whether a finitely presented group is abelian,
gap> # and finding a finite presentation of a finite index subgroup
gap> 
gap> f := FreeGroup( "a", "b" );
<free group on the generators [ a, b ]>
gap> g := f / [ f.1^2, f.2^3, (f.1*f.2)^5 ];
<fp group on the generators [ a, b ]>
gap> Size( g );
60
gap> IsAbelian(g);
false
gap> u := Subgroup( g, [ g.1, g.1^g.2 ] );
Group([ a, b^-1*a*b ])
gap> p := PresentationSubgroup( g, u, "g" );
<presentation with 3 gens and 4 rels of total length 12>
gap> gens := GeneratorsOfPresentation( p );
[ g1, g2, g3 ]
gap> TzPrintRelators( p );
#I  1. g1^2
#I  2. g2^2
#I  3. g3*g2*g1
#I  4. g3^5
gap> 
gap> 
gap> 
gap> F:=FreeGroup("a","b","c");
<free group on the generators [ a, b, c ]>
gap> a:=F.1; 
a
gap> b:=F.2;
b
gap> c:=F.3;
c
gap> G:=F/[a^2,b^2,c^2,(a*b)^3,(a*c)^3,(b*c)^3];
<fp group on the generators [ a, b, c ]>
gap> ### H := Subgroup( G, [ a*b*a*c, a*c*a*b ] );
gap> A := G.1;; B := G.2;; C := G.3;;
gap> H := Subgroup( G, [ A*B*A*C, A*C*A*B ] );
Group([ a*b*a*c, a*c*a*b ])
gap> Index( G, H );
6
gap> IsAbelian(H);
true
gap> ### IsCyclic(H);
gap> p := PresentationSubgroup( G, H, "g" );
<presentation with 3 gens and 2 rels of total length 6>
gap> gens := GeneratorsOfPresentation( p );
[ g1, g2, g3 ]
gap> TzPrintRelators( p );
#I  1. g3*g1^-1*g2
#I  2. g3*g2*g1^-1
gap> 
gap> #-------------------------------------------
gap> 
gap> # Finding the index of a subgroup of a free group:
gap> 
gap> 
gap> F := FreeGroup( "a", "b" );
<free group on the generators [ a, b ]>
gap> a := F.1;; b := F.2;
b
gap> H := Subgroup( F, [ a^2, b, a*b*a ] );
Group([ a^2, b, a*b*a ])
gap> Index( F, H );
2
gap> 
gap> 
gap> K := Subgroup( F, [ a^3, b^3 ] );
Group([ a^3, b^3 ])
gap> Index( F, K );
infinity
gap> 
gap> 
gap> quit;
math-compute-1:~ $ exit
exit

Script done on Sat 20 May 2017 10:03:33 PM CDT
